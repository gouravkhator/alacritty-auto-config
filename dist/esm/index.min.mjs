import o from"path";import{URL as r}from"url";import t from"yargs";import{hideBin as e}from"yargs/helpers";import i from"os";import n from"fs";import l from"yaml";import{execSync as s}from"child_process";function a(o){return o?o[0].toUpperCase()+o.substring(1).toLowerCase():void 0}const d=/^0x([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/,f=/^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/;function c(o){o=o.trim();if(!/^([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/.test(o))throw new Error("Color code provided, is neither in 3 letter format nor in 6 letter format..");if(3===o.length){let r="";for(let t=0;t<=2;t++)r+=o.charAt(t)+o.charAt(t);return r}return o}function u(o){if(o&&(!o||""!==o.trim())){if(o=o.trim(),d.test(o))return"#"+c(o.substring(2));if(f.test(o))return"#"+c(o.substring(1));throw new Error("Color code is not provided in hex(0x) or hash(#) format..")}}function v(o){if(o&&(!o||""!==o.trim())){if(o=o.trim(),f.test(o))return"0x"+c(o.substring(1));if(d.test(o))return"0x"+c(o.substring(2));throw new Error("Color code is not provided in hex(0x) or hash(#) format..")}}function y(o={}){var r,i,n,l,s,d,f,c,u,y,h,g,m,p;const b="fontsize",w="bgcolor",x="fgcolor",k="selcolor",$="cursor",A="opacity",E=16,_="#111122",F="#ccccff",C="#111122",S="Block",z=1;return t(e(process.argv)).options({s:{type:"number"},b:{type:"string"},c:{type:"string"},t:{type:"string"},y:{type:"string"},o:{type:"number"}}).usage("Usage: node $0 [options]=[values]\nOr, $0 [options]=[values] if $0 is an executable and not a javascript file\n\nThe options may/may not provided in the CLI. If they are not provided, either the previously set config is used or the defaults are set.").help("h").version("1.3.1").alias("s",b).alias("b",w).alias("c",x).alias("t",k).alias("y",$).alias("o",A).alias("h","help").alias("v","version").default(b,null!==(i=null===(r=null==o?void 0:o.font)||void 0===r?void 0:r.size)&&void 0!==i?i:E).default(w,null!==(s=null===(l=null===(n=null==o?void 0:o.colors)||void 0===n?void 0:n.primary)||void 0===l?void 0:l.background)&&void 0!==s?s:_).default(x,null!==(c=null===(f=null===(d=null==o?void 0:o.colors)||void 0===d?void 0:d.primary)||void 0===f?void 0:f.foreground)&&void 0!==c?c:F).default(k,null!==(h=null===(y=null===(u=null==o?void 0:o.colors)||void 0===u?void 0:u.selection)||void 0===y?void 0:y.text)&&void 0!==h?h:C).default($,null!==(m=null===(g=null==o?void 0:o.cursor)||void 0===g?void 0:g.style)&&void 0!==m?m:S).default(A,null!==(p=null==o?void 0:o.background_opacity)&&void 0!==p?p:z).nargs({[b]:1,[w]:1,[x]:1,[k]:1,[$]:1,[A]:1}).describe(b,`Takes font size to be set in alacritty [default=${E}]`).describe(w,`Takes primary background color in #ffffff or #fff or 0xfff or 0xffffff format [default=${_}]`).describe(x,`Takes primary foreground color in #ffffff or #fff or 0xfff or 0xffffff format [default=${F}]`).describe(k,`Takes text color (when the area is selected) in #ffffff or #fff or 0xfff or 0xffffff format [default=${C}]`).describe($,`Takes cursor style that can be Block or Underline or Beam [default=${S}]`).describe(A,`Takes background opacity which is between 0.0 (transparent) and 1.0 (opaque) [default=${z}]`).check((o=>{if(o.s&&(o.s<=0||o.s>40))throw new Error(`Wrong Arguments: Provided font size ${o.s} should be within the range of display: 0.1 to 40.0`);if(o.b&&void 0===v(""+o.b))throw new Error(`Wrong Arguments: Provided background color ${o.b} should be in hash or hex format`);if(o.c&&void 0===v(""+o.c))throw new Error(`Wrong Arguments: Provided font color ${o.c} should be in hash or hex format`);if(o.t&&void 0===v(""+o.t))throw new Error(`Wrong Arguments: Provided selection text color ${o.t} should be in hash or hex format`);if(o.y&&!["Block","Underline","Beam"].includes(a(""+o.y)))throw new Error(`Wrong Arguments: Provided cursor style ${o.y} should be in one of the 3 styles`);if(o.o&&(o.o<0||o.o>1))throw new Error(`Wrong Arguments: Provided background opacity ${o.o} should be between 0.0 and 1.0`);return!0})).argv}function h(o){if("string"==typeof o){if(!o||o&&""===o.trim())return;if(o=o.trim(),d.test(o))return"#"+c(o.substring(2));if(f.test(o))return"#"+c(o.substring(1));throw new Error("Color code is not provided in hex(0x) or hash(#) format..")}if("number"==typeof o){return"#"+c(o.toString(16))}}function g(o){if("string"==typeof o){if(!o||o&&""===o.trim())return;if(o=o.trim(),f.test(o))return"0x"+c(o.substring(1));if(d.test(o))return"0x"+c(o.substring(2));throw new Error("Color code is not provided in hex(0x) or hash(#) format..")}if("number"==typeof o){return"0x"+c(o.toString(16))}}function m(){let r="which alacritty",t=o.join(i.homedir(),".config/alacritty/alacritty.yml");"Windows_NT"===i.type()&&(r="where alacritty",t=o.join(i.homedir(),"AppData","alacritty.yml"));try{s(r)}catch(o){throw new Error("Package Not Installed: alacritty is not installed in your system or it's path is not set in your PATH or environment variable. \nSo, we are sorry that you cannot use our library. \n\nPlease install alacritty and try again")}return n.existsSync(t)||(n.mkdirSync(o.dirname(t),{recursive:!0}),n.writeFileSync(t,"")),t}function p(o){try{const r=n.readFileSync(o,"utf8");return l.parse(r)}catch(o){throw new Error("Cannot load original alacritty config file from the path provided..")}}function b(r,t){try{const e=o.resolve(t,"alacritty.yml");n.mkdirSync(o.dirname(e),{recursive:!0});const i=l.stringify(r);n.writeFileSync(e,i,"utf-8"),console.log("----Alacritty Auto Config----\n\nYour configs will be applied..\nIn case, you did not see the new look in alacritty, we suggest to close and reopen all windows of alacritty")}catch(o){console.log("Sorry, some error occurred while writing configurations to the alacritty.yml file"),console.error("Error: "+o.message)}}function w(o={},r,t){var e,i,n,l,s,d,f,c,u,y,h,g,m,p;let w=null!==(n=null===(i=null===(e=null==o?void 0:o.colors)||void 0===e?void 0:e.primary)||void 0===i?void 0:i.background)&&void 0!==n?n:"",x=null!==(d=null===(s=null===(l=null==o?void 0:o.colors)||void 0===l?void 0:l.primary)||void 0===s?void 0:s.foreground)&&void 0!==d?d:"",k=null!==(c=null===(f=null==o?void 0:o.font)||void 0===f?void 0:f.size)&&void 0!==c?c:void 0,$=null!==(h=null===(y=null===(u=null==o?void 0:o.colors)||void 0===u?void 0:u.selection)||void 0===y?void 0:y.text)&&void 0!==h?h:"",A=null!==(m=null===(g=null==o?void 0:o.cursor)||void 0===g?void 0:g.style)&&void 0!==m?m:"Block",E=null!==(p=null==o?void 0:o.background_opacity)&&void 0!==p?p:void 0,{primary_bgcolor:_=w,primary_fgcolor:F=x,fontsize:C=k,selection_fgcolor:S=$,cursor_style:z=A,background_opacity:B=E}=r;if(_=v(_),F=v(F),S=v(S),C<.1||C>40)throw new Error("Font size provided is not in the range 0.1 to 40.0");if(z&&!["Block","Underline","Beam"].includes(a(z)))throw new Error("Cursor style provided is not in one of the 3 accepted styles");if(B<0||B>1)throw new Error("Background opacity provided is not in the range 0.0 to 1.0");const P=Object.assign(Object.assign({},o),{font:{size:C},colors:{primary:{background:_,foreground:F},selection:{text:S}},cursor:{style:z},background_opacity:B});return b(P,t),P}var x;const k=new r(`file://${process.argv[1]}`);(null===(x=import.meta)||void 0===x?void 0:x.url)===k.toString()&&function(){let r="";try{r=m();let t=p(r);const e=o.dirname(r);let i=y(t);w(t,{fontsize:parseFloat(""+i.s),primary_bgcolor:i.b,primary_fgcolor:i.c,selection_fgcolor:i.t,cursor_style:i.y,background_opacity:parseFloat(""+i.o)},e)}catch(o){console.error("Error: "+o.message)}}();export{m as configInit,c as convertShortToLongCode,u as convertToHash,v as convertToHex,w as editConfig,f as hash_color_regex,d as hex_color_regex,h as oldConvertToHash,g as oldConvertToHex,p as readOriginalConfig,y as takeArgumentInputs,b as writeToConfigFile};
