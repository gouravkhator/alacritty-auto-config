import o from"path";import r from"yargs";import{hideBin as i}from"yargs/helpers";import e,{realpathSync as t}from"fs";import{pathToFileURL as n}from"url";import l from"os";import s from"yaml";import{execSync as a}from"child_process";function f(o){return o?o[0].toUpperCase()+o.substring(1).toLowerCase():void 0}const d=/^0x([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/,c=/^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/;function u(o){o=o.trim();if(!/^([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/.test(o))throw new Error("Color code provided, is neither in 3 letter format nor in 6 letter format..");if(3===o.length){let r="";for(let i=0;i<=2;i++)r+=o.charAt(i)+o.charAt(i);return r}return o}function v(o){if(o&&(!o||""!==o.trim())){if(o=o.trim(),d.test(o))return"#"+u(o.substring(2));if(c.test(o))return"#"+u(o.substring(1));throw new Error("Color code is not provided in hex(0x) or hash(#) format..")}}function y(o){if(o&&(!o||""!==o.trim())){if(o=o.trim(),c.test(o))return"0x"+u(o.substring(1));if(d.test(o))return"0x"+u(o.substring(2));throw new Error("Color code provided is invalid, as it either contains invalid values or it is not in hex(0x) or hash(#) format..")}}function h(o={}){var e,t,n,l,s,a,d,c,u,v,h,m,g,p,w;const b="fontsize",x="bgcolor",k="fgcolor",E="selcolor",A="cursor",$="opacity",_=16,F="#111122",P="#ccccff",S="#111122",z="Block",B=1;return r(i(process.argv)).options({s:{type:"number"},b:{type:"string"},c:{type:"string"},t:{type:"string"},y:{type:"string"},o:{type:"number"}}).usage("Usage: node <javascript-file-name> [options]=[values],\nif the file you ran is a javascript file..\n\nOr just, <executable-name> [options]=[values]\n\nThe options are not required fields. If you don't provide the options, we either load your previously set alacritty config, or we set our own defaults for those options.").help("h").version("1.3.2").alias("s",b).alias("b",x).alias("c",k).alias("t",E).alias("y",A).alias("o",$).alias("h","help").alias("v","version").default(b,null!==(t=null===(e=null==o?void 0:o.font)||void 0===e?void 0:e.size)&&void 0!==t?t:_).default(x,null!==(s=null===(l=null===(n=null==o?void 0:o.colors)||void 0===n?void 0:n.primary)||void 0===l?void 0:l.background)&&void 0!==s?s:F).default(k,null!==(c=null===(d=null===(a=null==o?void 0:o.colors)||void 0===a?void 0:a.primary)||void 0===d?void 0:d.foreground)&&void 0!==c?c:P).default(E,null!==(h=null===(v=null===(u=null==o?void 0:o.colors)||void 0===u?void 0:u.selection)||void 0===v?void 0:v.text)&&void 0!==h?h:S).default(A,null!==(g=null===(m=null==o?void 0:o.cursor)||void 0===m?void 0:m.style)&&void 0!==g?g:z).default($,null!==(w=null===(p=null==o?void 0:o.window)||void 0===p?void 0:p.opacity)&&void 0!==w?w:B).nargs({[b]:1,[x]:1,[k]:1,[E]:1,[A]:1,[$]:1}).describe(b,`Takes font size to be set in alacritty [default=${_}]`).describe(x,`Takes primary background color in #ffffff or #fff or 0xfff or 0xffffff format [default=${F}]`).describe(k,`Takes primary foreground color in #ffffff or #fff or 0xfff or 0xffffff format [default=${P}]`).describe(E,`Takes text color (when the area is selected) in #ffffff or #fff or 0xfff or 0xffffff format [default=${S}]`).describe(A,`Takes cursor style that can be Block or Underline or Beam [default=${z}]`).describe($,`Takes background opacity which is between 0.0 (transparent) and 1.0 (opaque) [default=${B}]`).check((o=>{if(o.s&&(o.s<=0||o.s>40))throw new Error(`Invalid Arguments: Provided font size \`${o.s}\` is out of bounds of the display font range: 0.1 to 40.0!!`);if(o.b&&void 0===y(""+o.b))throw new Error(`Invalid Arguments: Provided background color \`${o.b}\` is neither in hash nor in hex format!!`);if(o.c&&void 0===y(""+o.c))throw new Error(`Invalid Arguments: Provided font color \`${o.c}\` is neither in hash nor in hex format!!`);if(o.t&&void 0===y(""+o.t))throw new Error(`Invalid Arguments: Provided selection text color \`${o.t}\` is neither in hash nor in hex format!!`);if(o.y&&!["Block","Underline","Beam"].includes(f(""+o.y)))throw new Error(`Invalid Arguments: Provided cursor style: \`${o.y}\` is not one of the allowed cursor styles: { block, underline, beam }`);if(o.o&&(o.o<0||o.o>1))throw new Error(`Invalid Arguments: Provided background opacity \`${o.o}\` is not in the range from 0.0 to 1.0!!`);return!0})).argv}function m(o){if("string"==typeof o){if(!o||o&&""===o.trim())return;if(o=o.trim(),d.test(o))return"#"+u(o.substring(2));if(c.test(o))return"#"+u(o.substring(1));throw new Error("Color code is not provided in hex(0x) or hash(#) format..")}if("number"==typeof o){return"#"+u(o.toString(16))}}function g(o){if("string"==typeof o){if(!o||o&&""===o.trim())return;if(o=o.trim(),c.test(o))return"0x"+u(o.substring(1));if(d.test(o))return"0x"+u(o.substring(2));throw new Error("Color code is not provided in hex(0x) or hash(#) format..")}if("number"==typeof o){return"0x"+u(o.toString(16))}}function p(){let r="which alacritty",i=o.join(l.homedir(),".config/alacritty/alacritty.yml");"Windows_NT"===l.type()&&(r="where alacritty",i=o.join(l.homedir(),"AppData","alacritty.yml"));try{a(r)}catch(o){throw new Error("Package Not Installed: alacritty is not installed in your system or it's path is not set in your PATH or environment variable. \nSo, we are sorry that you cannot use our library. \n\nPlease install alacritty and try again")}return e.existsSync(i)||(e.mkdirSync(o.dirname(i),{recursive:!0}),e.writeFileSync(i,"")),i}function w(o){let r;try{return r=e.readFileSync(o,"utf8"),s.parse(r)}catch(o){throw void 0===r?new Error("Unable to read the newly-created/original alacritty config file from the default config path..\n\nPlease verify the file/folder permissions assigned to the alacritty's default config folder.."):new Error("Existing alacritty's config file cannot be parsed.\n\nPlease fix this YAML Parse Error and try again:\n"+o.message)}}function b(r,i){try{const t=o.resolve(i,"alacritty.yml");e.mkdirSync(o.dirname(t),{recursive:!0});const n=s.stringify(r);e.writeFileSync(t,n,"utf-8"),console.log("Your configs will be applied..\nIn case, you did not see the new look in alacritty, we suggest to close and reopen all windows of alacritty")}catch(o){console.log("Sorry, some error occurred while writing configurations to the alacritty.yml file"),console.error("Error: "+o.message)}}function x(o={},r,i){var e,t,n,l,s,a,d,c,u,v,h,m,g,p,w;let x=null!==(n=null===(t=null===(e=null==o?void 0:o.colors)||void 0===e?void 0:e.primary)||void 0===t?void 0:t.background)&&void 0!==n?n:"",k=null!==(a=null===(s=null===(l=null==o?void 0:o.colors)||void 0===l?void 0:l.primary)||void 0===s?void 0:s.foreground)&&void 0!==a?a:"",E=null!==(c=null===(d=null==o?void 0:o.font)||void 0===d?void 0:d.size)&&void 0!==c?c:void 0,A=null!==(h=null===(v=null===(u=null==o?void 0:o.colors)||void 0===u?void 0:u.selection)||void 0===v?void 0:v.text)&&void 0!==h?h:"",$=null!==(g=null===(m=null==o?void 0:o.cursor)||void 0===m?void 0:m.style)&&void 0!==g?g:"Block",_=null!==(w=null===(p=null==o?void 0:o.window)||void 0===p?void 0:p.opacity)&&void 0!==w?w:void 0,{primary_bgcolor:F=x,primary_fgcolor:P=k,fontsize:S=E,selection_fgcolor:z=A,cursor_style:B=$,window_background_opacity:C=_}=r;if(F=y(F),P=y(P),z=y(z),S<.1||S>40)throw new Error("Font size provided is not in the range 0.1 to 40.0");if(B&&!["Block","Underline","Beam"].includes(f(B)))throw new Error("Cursor style provided is not in one of the 3 accepted styles");if(C<0||C>1)throw new Error("Background opacity provided is not in the range of 0.0 to 1.0");const I=Object.assign(Object.assign({},o),{window:{opacity:C},font:{size:S},colors:{primary:{background:F,foreground:P},selection:{text:z}},cursor:{style:B}});return b(I,i),I}(function(){const o=t(process.argv[1]),r=n(o).href;return import.meta.url===r})()&&function(){console.log("----Alacritty Auto Config----\n");let r="";try{r=p();let i=w(r);const e=o.dirname(r);let t=h(i);x(i,{fontsize:parseFloat(""+t.s),primary_bgcolor:t.b,primary_fgcolor:t.c,selection_fgcolor:t.t,cursor_style:t.y,window_background_opacity:parseFloat(""+t.o)},e)}catch(o){console.error("Error: "+o.message+"\n")}}();export{p as configInit,u as convertShortToLongCode,v as convertToHash,y as convertToHex,x as editConfig,c as hash_color_regex,d as hex_color_regex,m as oldConvertToHash,g as oldConvertToHex,w as readOriginalConfig,h as takeArgumentInputs,b as writeToConfigFile};
